#include <stdio.h>

void print(unsigned number);
unsigned getsBit(char *string);

int main(int argc, char *argv[]) {
	unsigned num1, num2, num3;

	if (argc != 3) {
		printf("Error. Must have 2 binary numbers 32 characters long to run. Please try again. \n");
		return (1);
	}

	num1 = getsBit(argv[1]);
	num2 = getsBit(argv[2]);

	//Print AND
	num3 = num1 & num2;
	printf("AND: ");
	print(num3);

	//Print OR
	num3 = num1 | num2;
	printf("OR: ");
	print(num3);

	//Print XOR
	num3 = num1 ^ num2;
	printf("XOR: ");
	print(num3);

}

void print(unsigned number) {
	int i = 0;
	int bit;
	int enabledVal = 0;
	for (i = 31; i >= 0; i--) {
		bit = (number >> i) & 1;
		printf("%d", bit);
		if (bit == 1)
			enabledVal++;
		if (i % 8 == 0)
			printf(" ");
	}
	printf("(%d)\n", enabledVal);
}

unsigned newNumber(char *string) {
	unsigned num = 0;
	int i = 0;
	int bitVal;
	for (i = 0; i < 32; i++) {
		if (string[i] == '0'){
			bitVal = 0;
		}
		else {
			bitVal = 1;
		}
		num = (num << 1) | bitVal;
	}
	return (num);
}
