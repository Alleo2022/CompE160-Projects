#include <stdio.h>
#include <stdlib.h>
#include <math.h>

void printS(char userInput[16]) {
	if (userInput[0] == '1') {
		printf("-");
	}
	double bits = 0;
	double exp = 0;

//case 3

	if (userInput[1] == '1' && userInput[2] == '1' && userInput[3] == '1' && userInput[4] == '1' && userInput[5] == '1') {
		printf("infinity");
	}
//case 1
	else if (userInput[1] == '0' && userInput[2] == '0' && userInput[3] == '0' && userInput[4] == '0' && userInput[5] == '0') {
		for (int i = 6; i < 16; i++) {
			if (userInput[i] == '1') {
				bits += pow(2, - (i - 5));
			}
		}
		printf("%0.15lf", pow(2, -14)*bits);
	}
//case 2
	else {
		for (int i = 6; i < 16; i++) {
			if (userInput[i] == '1') {
				bits += pow(2, 9 - (i - 6));
			}
		}
		for (int i = 1; i < 6; i++) {
			if (userInput[i] == '1') {
				exp += pow(2, 5 - i);
			}
		}
		printf("%0.15lf", pow(2, exp - 15) * (1 + bits / 1024));
}
}

int main(void){
	   char userInput[][16] = {
	            {'0','0','0','0','0','0','0','0',    '0','0','0','0','0','0','0','0'}, // 0 00000 0000000000 = 0
	            {'0','0','0','0','0','0','0','0',    '0','0','0','0','0','0','0','1'}, // 0 00000 0000000001 = 0.000000059604645
	            {'0','0','0','0','0','0','1','1',    '1','1','1','1','1','1','1','1'}, // 0 00000 1111111111 = 0.000060975552
	            {'0','0','0','0','0','1','0','0',    '0','0','0','0','0','0','0','0'}, // 0 00001 0000000000 = 0.00006103515625
	            {'0','0','1','1','0','1','0','1',     '0','1','0','1','0','1','0','1'}, // 0 01101 0101010101 = 0.33325195, nearest value to 1/3
	            {'0','0','1','1','1','0','1','1',    '1','1','1','1','1','1','1','1'}, // 0 01110 1111111111 = 0.99951172, largest number less than one
	            {'0','0','1','1','1','1','0','0',    '0','0','0','0','0','0','0','0'}, // 0 01111 0000000000 = 1
	            {'0','0','1','1','1','1','0','0',    '0','0','0','0','0','0','0','1'}, // 0 01111 0000000001 = 1.00097656, smallest number larger than one
	            {'0','1','1','1','1','0','1','1',    '1','1','1','1','1','1','1','1'}, // 0 11110 1111111111 = 65504
	            {'0','1','1','1','1','1','0','0',    '0','0','0','0','0','0','0','0'}, // 0 11111 0000000000 = infinity
	            {'1','0','0','0','0','0','0','0',    '0','0','0','0','0','0','0','0'}, // 1 00000 0000000000 = -0
	            {'1','1','0','0','0','0','0','0',    '0','0','0','0','0','0','0','0'}, // 1 10000 0000000000 = -2
	            {'1','1','1','1','1','1','0','0',    '0','0','0','0','0','0','0','0'}  // 1 11111 0000000000 = -infinity
	    };
	   for(int i = 0; i < 13; i++) {
		   printS(userInput[i]);
		   printf("\n");
	   }
	   return(0);
}
